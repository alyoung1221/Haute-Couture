@model Project1.ViewModels.ProductIndexViewModel
@using PagedList.Mvc

@if (!String.IsNullOrWhiteSpace(Model.category))
{
    ViewBag.Title = Capitalize.CapitalizeWords(Model.category.Replace("-", " "));
}
else
{
    ViewBag.Title = "Shop";
}

<div class="flex-container" id="titlebar">
    <h2>@ViewBag.Title</h2>
    @if (Request.IsAuthenticated)
    {
        @Html.ActionLink("New Product", "Create", null, new { @id = "create" })
    }
</div>
@{
    if (String.IsNullOrWhiteSpace(Model.search))
    {
        <p>@Model.Products.TotalItemCount @(Model.Products.TotalItemCount != 1 ? "products" : "product")</p>
    }
    else
    {
        <p>Your search for @Model.search found @Model.Products.TotalItemCount @(Model.Products.TotalItemCount != 1 ? "products" : "product")</p>
    }
}
<br />
<div id="menubar" class="flex-container">
    @using (Html.BeginRouteForm("ProductsIndex", FormMethod.Get, htmlAttributes: new { @name = "filters" }))
    {
        @Html.Partial("FiltersPartial", Model)
    }
    <span class="mobile page"><br /><br /></span>
    <div class="desktop">
        @(Model.Products.PageCount < Model.Products.PageNumber ? 0 : Model.Products.PageNumber) of @Model.Products.PageCount
        @Html.PagedListPager(Model.Products, page => Url.Action("Index", new { page, size = Model.size, search = Model.search, order = Model.order }))
    </div>
</div>
@if (Model != null)
{
    SelectList pgSizes = PageSizes.PgSizes;
    <div class="sizes flex-container">
        <div class="mobile" style="margin-right: 40px;">
            @(Model.Products.PageCount < Model.Products.PageNumber ? 0 : Model.Products.PageNumber) of @Model.Products.PageCount
            @Html.PagedListPager(Model.Products, page => Url.Action("Index", new { page, size = Model.size, search = Model.search, order = Model.order }))
        </div>
        <div class="sizes-container">
            @Html.DropDownList("size", pgSizes, new { @id = "pgSizes" })
            <span style="font-weight: 700;">items per page</span>
        </div>
    </div>
}
@Html.Partial("ProductsPartial", Model)